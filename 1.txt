package amn;

public class Amn {
    public static String encrypt(String plaintext, int shift) { 
        // only interested in the alphabet 
        plaintext = plaintext.replaceAll("[^a-zA-Z]", "").toUpperCase(); 
        StringBuilder ciphertext = new StringBuilder(); 
        for (char c : plaintext.toCharArray()) { 
            // all upper case chars are in the ascii range 65-90. 
            // Subtracting A (65) from from the character gives us a value in the range of 0 25 
            int newPos = c - 'A'; 
            // add the shift to the position 
            newPos += shift; 
            // perform the mod to make sure the result is in the range of 0-25 
            newPos = newPos % 26 ; 
            // add A (65) to the value to get the uppercase character 
            newPos += 'A'; 
            ciphertext.append((char) newPos); 
        } 
        return ciphertext.toString(); 
    } 
   public static String decrypt(String ciphertext, int shift) { 
        // only interested in the alphabet 
        ciphertext = ciphertext.replaceAll("[^a-zA-Z]", "").toUpperCase(); 
        StringBuilder plaintext = new StringBuilder(); 
        for (char c : ciphertext.toCharArray()) { 
            // all upper case chars are in the ascii range 65-90. 
            // Subtracting A (65) from from the character gives us a value in the range of 0 25 
            int newPos = c - 'A'; 
            // subtract the shift from the position 
            newPos -= shift; 
            if(newPos<0) 
                newPos=newPos+26 ;  
            
            // add A (65) to the value to get the uppercase character 
            newPos += 'A'; 
            plaintext.append((char) newPos); 
        } 
        return plaintext.toString(); 
    } 
public static void bruteForceAttack(String ciphertext) { 
       
        for (int shift = 1; shift < 26; shift++) 
            System.out.println("shift: " + shift + ", " + decrypt(ciphertext, shift)); 
    } 
public static int chi_dec(String cipher) { 
     char[] chars = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'}; 
     int[] freq  = {73, 9, 30, 44, 130, 28, 16, 35, 74, 2, 3, 35, 25, 78, 74, 27, 3, 77, 63, 93, 27, 13, 16, 5, 19, 1}; 
        int key = 0; 
        int[] freq1 = new int[26]; 
        for (int i = 0; i < 26; i++) { 
            freq1[i] = 0; 
        } 
        for (int i = 0; i < 26; i++) {       
            for (int j = 0; j < cipher.length(); j++) { 
                if (cipher.charAt(j) == chars[i]) { 
                    freq1[i]++; 
                } 
            } 
        } 
        double k = Integer.MAX_VALUE; 
        double chi = 0; 
        for (int i = 1; i < 26; i++) {    
            for (int j = 0; j < 26; j++) { 
                chi += Math.pow(freq1[(j + i) % 26] - freq[j], 2) / freq[j];  
} 
            if (chi < k) { 
                k = chi; 
                key = i; 
            } 
            chi = 0; 
} 
        return key;   }
    public static void main(String[] args) {
       String   y= encrypt("aya", 4); 
      System.out.println(y);
      // bruteForceAttack(y);
      int z= chi_dec(y);
    String x=  decrypt(y,4);
    System.out.print(x);
       
    
    }
    
}
